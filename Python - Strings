#Replace all ______ with rjust, ljust or center. 

#This must be an odd number, says 5.
AlignLevel = int(raw_input()) 
c = 'H'

'''
Top Cone
Since we need 5 rows here, we need a range of 5
i in range 5 is 0,1,2,3,4. 
Since C=H, so c*i gives us H*0,H*1,H*2,H*3,H*4
1st it prints out the first 4 pillars from the left, 
then the middle single H pillar, 
then 4 pillars on right.
'''

for i in range(AlignLevel):
    print((c*i).rjust(AlignLevel-1)+c+(c*i).ljust(AlignLevel-1))
    
'''
Top Pillar
Since we need 6 rows here, we need a range of 6 = 5+1
Print the H on the left, we need the length to be 7 (5+2)
Then Print the H on the right, we need the length to be 30 (5*6)
If we have rjust(AlignLevel+2, '-')), this '-' will show us the visible length. 
'''

for i in range(AlignLevel+1):
    print((c*AlignLevel).rjust(AlignLevel+2)) + ((c*AlignLevel).center(AlignLevel*7))
    
'''
Middle Pillar                                                                                        
Since we need 3 rows here, we need a range of 3 = (5+1)/2
'''
                                                                                                                        
for i in range((AlignLevel+1)//2):
    print((c*AlignLevel*5).center(AlignLevel*6))    
    
    
'''
Bottom Pillar
'''

for i in range(AlignLevel+1):
    print((c*AlignLevel).rjust(AlignLevel+2)) + ((c*AlignLevel).center(AlignLevel*7))

    
'''
Bottom Cone
Since we need 5 rows here, we need a range of 5
i in range 5 is 0,1,2,3,4; i is 0,1,2,3,4 
Since C=H, to reverse the order. We have to use H*(5 - coresposing value of i - 1)
'''

for i in range(AlignLevel):
    print(((c*(AlignLevel-i-1)).rjust(AlignLevel)+c+(c*(AlignLevel-i-1)).ljust(AlignLevel)).rjust(AlignLevel*6))